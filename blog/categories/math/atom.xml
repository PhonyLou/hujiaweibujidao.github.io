<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: math | Hujiawei Bujidao]]></title>
  <link href="http://hujiaweibujidao.github.io/blog/categories/math/atom.xml" rel="self"/>
  <link href="http://hujiaweibujidao.github.io/"/>
  <updated>2014-04-27T14:49:58+08:00</updated>
  <id>http://hujiaweibujidao.github.io/</id>
  <author>
    <name><![CDATA[hujiawei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Calculus Summary Chapter 10]]></title>
    <link href="http://hujiaweibujidao.github.io/blog/2014/04/28/calculus-summary-chapter-10/"/>
    <updated>2014-04-28T14:29:00+08:00</updated>
    <id>http://hujiaweibujidao.github.io/blog/2014/04/28/calculus-summary-chapter-10</id>
    <content type="html"><![CDATA[<h3 id="center-center"><center>第十部分 微分方程</center></h3>

<h4 id="section">第一节 微分方程的基本概念</h4>
<p>引例，微分方程的基本概念</p>

<p>在许多问题中，我们不总是能够得到函数关系式，而是得到函数和它的导数之间的关系式，这样的关系式就是微分方程。微分方程中出现的未知函数的最高阶导数的阶数叫做微分方程的阶。</p>

<p>只要是能够满足微分方程的函数都是它的解，如果解中包含了任意常数，并且任意常数的个数与阶数相同，那么这个解又叫做微分方程的通解。</p>

<p>通常我们会有一些初始条件。确定了通解中的任意常数的话，那么就得到了微分方程的特解。</p>

<table>
  <tbody>
    <tr>
      <td>求微分方程<script type="math/tex">y'=f(x,y)</script>满足初始条件$$y</td>
      <td><em>{x=x</em>{0}}=y_{0}$$的特解的问题，叫做一阶微分方程的初值问题。</td>
    </tr>
  </tbody>
</table>

<p><img src="http://hujiaweibujidao.github.io/images/math/chuzhi.png" alt="image" /></p>

<h4 id="section-1">第二节 一阶微分方程</h4>
<p>可分离变量方程，齐次方程，一阶线性微分方程，伯努利方程</p>

<p>可分离变量方程：利用一阶微分方程的形式，巧妙地分离变量，一边是y的函数，另一边是x的函数，然后左右两边积分即可得到一个关于x和y的隐函数，这个隐函数即为微分方程的解。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/fenlibianliang1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/fenlibianliang2.png" alt="image" /></p>

<p>齐次方程：将原微分方程进行调整，左边为一阶导数，右边为关于<script type="math/tex">\frac{y}{x}</script>的函数，然后可以利用可分离变量得到微分方程的解。有些非齐次的微分方程可以化为齐次方程。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/qici1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/qici2.png" alt="image" /></p>

<p>一阶线性微分方程：对于未知函数和导数都是一次的微分方程。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/xianxing1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/xianxing2.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/xianxing3.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/xianxing4.png" alt="image" /></p>

<p>伯努利方程：含二阶导数</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/bonuli1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/bonuli2.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/bonuli3.png" alt="image" /></p>

<h4 id="section-2">第三节 可降阶的高阶微分方程</h4>
<p>y(n)=f(x)型的微分方程，yn=f(x，y’)型的微分方程，yn=f(Y，y’)型的微分方程</p>

<p>略过。</p>

<h4 id="section-3">第四节 二阶常系数微分方程</h4>
<p>通解的结构，二阶常系数齐次线性微分方程，二阶常系数非齐次线性微分方程</p>

<p>略过。</p>

<h4 id="section-4">第五节 微分方程的应用实例</h4>
<p>物体冷却过程的数学模型，动力学问题，人口模型</p>

<p>略过。</p>

<center>Congratuation! Thank you!</center>
<center>恭喜你，看完啦！</center>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calculus Summary Chapter 9]]></title>
    <link href="http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-9/"/>
    <updated>2014-04-27T14:29:00+08:00</updated>
    <id>http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-9</id>
    <content type="html"><![CDATA[<h3 id="center-center"><center>第九部分 重积分</center></h3>

<h4 id="section">第一节 二重积分的概念与性质</h4>
<p>二重积分的概念，二重积分的性质</p>

<p>将一元函数积分进行扩展，如果是对闭区域D进行积分的话就叫做二重积分，很重要的一类二重积分问题是求曲顶柱体的体积，利用前面的定积分的思想来看，二重积分是取很小的积分面积元素，以它们为底，以函数值为高，然后求对应的曲顶柱体的体积。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/erchongjifen.png" alt="image" /></p>

<h4 id="section-1">第二节 二重积分的计算方法</h4>
<p>直角坐标下二重积分的计算，利用极坐标计算二重积分</p>

<p>直角坐标下的二重积分的计算可以看做是做两次单独的定积分。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/erchongjifen2.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/erchongjifen3.png" alt="image" /></p>

<p>有些情况下实际计算时需要根据区域D的情况考虑它属于X型还是Y型，还是需要分段进行考虑。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/erchongjifen4.png" alt="image" /></p>

<h4 id="section-2">第三节 三重积分</h4>
<p>三重积分的概念，三重积分的计算</p>

<p>三重积分可以看做是求密度不均匀的物体的体积，它取的是很小很小的体积元素。它的计算使用先一后二或者先二后一的方式来计算，此处略过。</p>

<h4 id="section-3">第四节 重积分的应用</h4>
<p>曲面的面积，质心</p>

<p>略过。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calculus Summary Chapter 8]]></title>
    <link href="http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-8/"/>
    <updated>2014-04-27T14:29:00+08:00</updated>
    <id>http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-8</id>
    <content type="html"><![CDATA[<h3 id="center-center"><center>第八部分 多元函数微分法及其应用</center></h3>

<h4 id="section">第一节 多元函数的基本概念</h4>
<p>平面点集、n维空间，多元函数的概念，二元函数的极限，二元函数的连续</p>

<p>将前面的一元函数的知识扩展下就知道了。</p>

<p>二元函数的极限称为二重极限，二重极限的存在是指<script type="math/tex">P(x,y)</script>以任何方式趋近<script type="math/tex">P_{0}(x_{0},y_{0})</script>(有别于在一元函数中只有从左边或者从右边趋近两种方式)，如果不同方式趋近时的极限值不同的话，说明二重极限不存在！</p>

<h4 id="section-1">第二节 偏导数</h4>
<p>偏导数的定义及其计算方法，二元函数偏导数的几何意义，高阶偏导数</p>

<p>在多元微分学中，自变量多了，所以导数变成偏导数了。对于二元函数偏导数的几何意义如下，也是斜率，但是要看如何过该点确定曲面的切线以及切线是对哪个轴的斜率！</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/piandaoshu.png" alt="image" /></p>

<p>高阶偏导数和前面的高阶导数类似，但是因为自变量多了，也就多了个混合偏导数，对于连续函数<script type="math/tex">z=f(x,y)</script>，在其连续区域内，两个二阶混合偏导数相等！</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/gaojipiandaoshu.png" alt="image" /></p>

<h4 id="section-2">第三节 全微分</h4>
<p>全微分的定义，可微、偏导数及连续之间的关系，全微分在近似计算中的应用</p>

<p>在多元微分学中对于某一个变量的微分叫做偏微分，对全部变量的微分就扩展成了全微分的概念，同样，多元函数微分学中微分的意义也是希望使用自变量的线性函数来近似代替函数的全增量<script type="math/tex">\vartriangle z</script>。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/quanweifen.png" alt="image" /></p>

<p>全微分同样可以用于近似计算。</p>

<h4 id="section-3">第四节 多元复合函数和隐函数的求导法则</h4>
<p>多元复合函数的求导法则，隐函数求导法则</p>

<p>多元复合函数的求导可以使用“链式法则”，即<strong>“分段相乘，分叉相加，单路全导，叉路偏导”</strong>！</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/chainrule.png" alt="image" /></p>

<p>对应上面两种情况下的“链式图”如下，第一种情况，z到x和y是分叉，分叉相加，z到x到t是分段，分段相乘，x到t是单路，单路全导；第二种情况，z到u和v是分叉，分叉相加，z到u到x是分段，分段相乘，u到t是叉路，叉路偏导！</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/chainrulefig.png" alt="image" /></p>

<p>隐函数求导是很重要的一部分，因为在实际应用中，很多时候得到的都是一个隐函数，并没有具体的函数表达式，对于它的求导有下面三个存在定理。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/yinfun1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/yinfun2.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/yinfun3.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/yinfun4.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/yinfun5.png" alt="image" /></p>

<p>最后的雅可比式比较重要，在数值分析中有相应的应用，理解它和行列式之间的关系，详情可看<a href="http://zh.wikipedia.org/wiki/%E8%A1%8C%E5%88%97%E5%BC%8F">行列式 on wiki</a>。<a href="http://zh.wikipedia.org/wiki/%E9%9B%85%E5%8F%AF%E6%AF%94%E7%9F%A9%E9%98%B5">雅可比矩阵 on wiki</a></p>

<h4 id="section-4">第五节 偏导数的几何应用</h4>
<p>空间曲线的切线与法平面，曲面切平面与法线</p>

<p>空间曲线的切线需要得到该点的各个方向的偏导数，法平面是过该点并垂直于切线的平面。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/spaceline_qiexian.png" alt="image" /></p>

<p>曲面的切平面与法线略过。</p>

<h4 id="section-5">第六节 多元函数的极值及其最值</h4>
<p>极值的定义，极值存在的条件，最大值与最小值，拉格朗日乘数法</p>

<p>条件极值问题转化成无条件极值问题，使用拉格朗日乘数法，这是一个非常重要的解决条件极值问题的方法，在机器学习的很多算法中使用这种方法，比如Fisher判别等等。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/lagerang1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/lagerang2.png" alt="image" /></p>

<h4 id="section-6">补充节 方向导数和梯度</h4>

<p>方向导数：很多时候我们想知道函数沿着某个方向的变化率，这个方向不一定是坐标轴方向。
<img src="http://hujiaweibujidao.github.io/images/math/fangxiangdaoshu1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/fangxiangdaoshu2.png" alt="image" /></p>

<p>梯度：梯度就是一个向量，表示曲线上某点沿着曲线的某个方向发生移动的向量。梯度的应用自然是梯度下降法，该方法可以让我们的优化问题的极值函数尽快地趋近问题的最优解。</p>

<p>这里还有等值线和等值面的概念，对于二元函数<script type="math/tex">f(x,y)</script>可以得到其对应的等值线<script type="math/tex">f(x,y)=c</script>，函数在某一点的梯度方向就是等值线在该点的法线方向。</p>

<p>还要理解梯度和方向导数之间的关系，如果梯度的方向与方向导数取得最大值的方向相同的话，那么该方向就是函数变化最快的方向。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/tidu1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/tidu2.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/tidu3.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/tidu4.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/tidu5.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/tidu6.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/tidu7.png" alt="image" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calculus Summary Chapter 7]]></title>
    <link href="http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-7/"/>
    <updated>2014-04-27T14:29:00+08:00</updated>
    <id>http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-7</id>
    <content type="html"><![CDATA[<h3 id="center-center"><center>第七部分 向量代数与空间解析几何</center></h3>
<p>本部分是多元微分学的基础，而且涉及到了很多的空间知识，图形比较多，所以这部分的图片比较多，如若不清晰请Wiki或者翻书查看。</p>

<h4 id="section">第一节 空间直角坐标系</h4>
<p>空间点的直角坐标，空间两点的距离</p>

<h4 id="section-1">第二节 向量代数</h4>
<p>向量的概念，向量的线性运算，向量的坐标，向量的模、方向角、投影，向量的数量积与向量积</p>

<p>方向角和方向余弦的概念：</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/fangxiangjiao1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/fangxiangjiao2.png" alt="image" /></p>

<p>投影的概念，投影是一个数值，当投影是指是一个向量<script type="math/tex">\overrightarrow{r}</script>在另一个向量<script type="math/tex">\overrightarrow{u}</script>上的投影时，投影就是投影到目标向量上得到的向量的模与目标向量的单位向量的模的比值。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/touying1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/touying2.png" alt="image" /></p>

<p>向量的数量积的概念，即<script type="math/tex">ab=\|a\|\|b\|\cos \theta</script>，在物理中就是指力F做的功W。数量积又叫内积，是很重要的概念，在线代中同样有矩阵内积的概念，在数据挖掘中有一种很常用的度量相似度的方式，即余弦相似度，一般用于文本类似的数据求相似度。向量的向量积是<script type="math/tex">ab=\|a\|\|b\|\sin\theta</script>。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/shuliangji1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/shuliangji2.png" alt="image" /></p>

<h4 id="section-2">第三节 平面及其方程</h4>
<p>平面的点法式方程，平面的一般方程，两平面的夹角</p>

<p>已知一个平面内的一点和这个平面的法向量便可以确定一个平面了；其实，任何一个三元一次方程<script type="math/tex">Ax+By+Cz+D=0</script>都可以确定一个平面，其法向量就是(A,B,C)。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/space1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/space2.png" alt="image" /></p>

<p>两个平面的夹角可用两个平面的法向量之间的夹角来得到。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/spaceangle.png" alt="image" />
       　
####第四节 空间直线及其方程
空间直线的一般方程，空间直线的对称式方程与参数方程，两直线的夹角，直线与平面的夹角</p>

<p>两个平面的交线就可以确定一条空间直线；已知直线上一点和直线的方向向量也可以确定一条直线。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/line1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/line2.png" alt="image" /></p>

<p>两条直线之间的夹角可用两条直线的方向向量之间的夹角来得到</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/lineangle.png" alt="image" /></p>

<p>直线与平面之间的夹角可用直线的方向向量和平面的法向量之间的夹角来得到。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/linespaceangle.png" alt="image" /></p>

<h4 id="section-3">第五节 曲面及其方程</h4>
<p>曲面方程的概念，旋转曲面，柱面，二次曲面</p>

<p>曲面方程</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/qumian.png" alt="image" /></p>

<p>旋转曲面：平面内一条曲线绕着平面上的一条直线旋转一周得到的曲面叫做旋转曲面。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/xuanzhuanqumian.png" alt="image" /></p>

<p>柱面：一条直线绕着一条定曲线平行移动得到的轨迹称为柱面。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/zhumian.png" alt="image" /></p>

<p>二次曲面<a href="http://zh.wikipedia.org/wiki/%E4%BA%8C%E6%AC%A1%E6%9B%B2%E9%9D%A2">on wiki</a>，与平面解析几何中定义二次曲线类似，三元二次方程<script type="math/tex">F(x,y,z)=0</script>所表示的曲面称为二次曲面，而平面是一次曲面。Wikipedia上显示了各种二次曲面的方程和二次曲面的图形。</p>

<h4 id="section-4">第六节 空间曲线及其方程</h4>
<p>空间曲线的一般方程，空间曲线的参数方程，空间曲线在坐标面上的投影</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/spaceline1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/spaceline2.png" alt="image" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calculus Summary Chapter 6]]></title>
    <link href="http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-6/"/>
    <updated>2014-04-27T14:29:00+08:00</updated>
    <id>http://hujiaweibujidao.github.io/blog/2014/04/27/calculus-summary-chapter-6</id>
    <content type="html"><![CDATA[<h3 id="center-center"><center>第六部分 无穷级数</center></h3>

<h4 id="section">第一节 常数项级数的概念与基本性质</h4>
<p>常数项级数的概念，常数项级数的基本性质</p>

<p>无穷级数的思想来源于近似计算圆面积这个问题，考虑用内接正方形来近似计算。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/infty_round.png" alt="image" /></p>

<p>数列{<script type="math/tex">u_{n}</script>}的元素之和得到的表达式<script type="math/tex">u_{1}+u_{2}+\cdots+u_{n}+\cdots</script>就叫做(常数项)(无穷)级数，其前n项之和又可以组成一个新的数列{<script type="math/tex">s_{n}</script>}，即<script type="math/tex">s_{n}=\Sigma_{i=1}^{n}u_{i}</script>，一般项<script type="math/tex">s_{n}</script>称为部分和。</p>

<p>如果部分和数列{<script type="math/tex">s_{n}</script>}有极限，那么这个无穷级数<script type="math/tex">u_{n}=\Sigma_{i=1}^{n}u_{i}</script>就是收敛的，极限s就叫做这个无穷级数的和。</p>

<p>级数收敛的必要条件是它的一般项<script type="math/tex">u_{n}</script>趋近于0，但不是充分条件！比如，调和级数<script type="math/tex">1+\frac{1}{2}+\frac{1}{3}+\frac{1}{4}+\cdots+\frac{1}{n}+\cdots</script>的一般项<script type="math/tex">u_{n}=\frac{1}{n}</script>也是趋近于0的，但是调和级数是发散的，采用反证法即可证明得到，证明如下，<script type="math/tex">s_{2n}-s{n}>\frac{1}{2}</script>并不趋近于0，所以不收敛。</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/tiaohe_series.png" alt="image" /></p>

<h4 id="section-1">第二节 常数项级数敛散性的判别方法</h4>
<p>正项级数及其敛散性的判别方法，交错级数及其敛散性的判别方法，绝对收敛与条件收敛</p>

<p>正项级数<script type="math/tex">u_{n}=\Sigma_{i=1}^{n}u_{i}</script>收敛的充分必要条件是它的部分和数列{<script type="math/tex">s_{n}</script>}有界。</p>

<p>比值审敛法，对于正项级数<script type="math/tex">u_{n}=\Sigma_{i=1}^{n}u_{i}</script>，若<script type="math/tex">\lim_{n\to \infty}\frac{u_{n+1}}{u_{n}}=\beta</script>，当<script type="math/tex">\beta>1</script>时级数发散，当<script type="math/tex">% &lt;![CDATA[
\beta<1 %]]&gt;</script>时级数收敛，当<script type="math/tex">\beta=1</script>时级数可能发散可能收敛。</p>

<p>还有其他的一些判断级数收敛的方法，略过。</p>

<h4 id="section-2">第三节 幂级数</h4>
<p>函数项级数的基本概念，幂级数及其敛散性，幂级数的运算，函数展开成幂级数，幂级数在近似计算中的应用</p>

<p>函数项级数就是定义在某个区间上的函数族之和，表达式类似<script type="math/tex">u_{1}(x)+u_{2}(x)+u_{3}(x)+\cdots+u_{n}(x)+\cdots</script>，对于某个确定的值<script type="math/tex">x=x_{0}</script>，函数项级数<script type="math/tex">u_{1}(x_{0})+u_{2}(x_{0})+u_{3}(x_{0})+\cdots+u_{n}(x_{0})+\cdots</script>就变成常数项级数，如果该常数项级数收敛的话，那么点<script type="math/tex">x_{0}</script>就是函数项级数在定义区间上的一个收敛点，所有收敛点就组成了收敛域。</p>

<p>幂级数就是最常用的一类函数项级数，它的形式如下：</p>

<script type="math/tex; mode=display">\Sigma_{n=0}^{\infty}a_{n}x^{n}=a_{0}x^{0}+a_{1}x^{1}+\cdots+a_{n}x^{n}+\cdots</script>

<p>一种判断幂级数收敛的办法是阿贝尔定理，如果级数<script type="math/tex">\Sigma_{n=0}^{\infty}a_{n}x^{n}</script>当<script type="math/tex">x=x_{0}(x_{0} \ne 0)</script>时收敛，那么对于开区间<script type="math/tex">(-\|x_{0}\|,\|x_{0}\|)</script>内的任何x都有幂级数收敛，反之，如果当<script type="math/tex">x=x_{0}(x_{0} \ne 0)</script>时发散，那么对于闭区间<script type="math/tex">[-\|x_{0}\|,\|x_{0}\|]</script>外的任何x都有幂级数发散。其实就是对于幂级数的收敛半径R内部任意x都收敛，外部都发散！</p>

<p>许多应用中，我们都希望知道如何将一个给定的函数f(x)展开成幂级数的形式，这样相当于对函数进行近似了，可以大大简化计算量，于是便有了泰勒级数！</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/tylor_serials.png" alt="image" /></p>

<p>特别地，当<script type="math/tex">x_{0}=0</script>时泰勒级数又叫麦克劳林级数，展开式称为麦克劳林展开式</p>

<script type="math/tex; mode=display">f(x)=\Sigma_{n=0}^{n}\frac{1}{n!}f^{n}(0)x^{n}</script>

<p>将函数展开成幂级数的步骤：</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/miseries1.png" alt="image" />
<img src="http://hujiaweibujidao.github.io/images/math/miseries2.png" alt="image" /></p>

<p>例如，对于函数<script type="math/tex">e^{x}</script>幂级数展开</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/ex.png" alt="image" /></p>

<p>常用的幂级数：</p>

<p><img src="http://hujiaweibujidao.github.io/images/math/common_series.png" alt="image" /></p>

]]></content>
  </entry>
  
</feed>
